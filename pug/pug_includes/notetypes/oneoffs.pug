-
  var oneoffs = [
    {
      "title" : "parallel",
      "para" : "is an update running with both of old and new"
    },
    {
      "title" : "customer sign off",
      "para" : "can either be sprint review or at the end of the project"
    },
    {
      "title" : "epic",
      "para" :  "An Epic is a high-level body of work bring groups of related stories together."
    },
    {
      "title" : "scrum and v-model",
      "para" : "don’t include is change of scope of a project."
    },
    {
      "title" : "v-model",
      "para" : "As for the v-model it follows a structure that both scrum and spiral don’t align with as its an a stage by stage rather than being iterative process where things can change"
    },
    {
      "title" : "non-functional",
      "para" : "usability: having all functions available when wanting to test the app.|reliability: having all the details in place mainly looking at how it functions and if it works.|recoverability: being able to replace components with minimum work effort.|maintainability: having a way to keep a simple format that gives access to simple fixes.|serviceability: easy way to repair and maintain with little effort of a service|Performance:  making sure systems work on a set of criteria as standards.|scalability:  appropriately handling increasing and decreasing workloads.|capacity:  making sure that we can deliver enough functionality to the end users.|availability:  making sure everything functions and is on at all times.|security:  making sure that security can be maintained and can prevent what it requires to protect."
    },
    {
      "title" : "class diagram",
      "para" : "A class diagram holds the information like the following example: | class name| +age: Int| +gender: String| ____________| functions| + role() "
    },
    {
      "title" : "class diagram usecase",
      "para" : "to structure data showing the systems classes, attributes, methods and relationships among other objects"
    },

    {
      "title" : "class diagram notation",
      "para" : "class name: | name of the class | class attributes:| these show the attributes the class have| class operations:| these hold the functions and methods the class holds"
    },

    {
      "title" : "class diagram relationship types",
      "para" : "inheritence:| superclass holds the data, for the following example lets use human.| the class holds the following as attributes:| +brain: String| +bones: String| We then want to identify certain people with the superclass, these are called subclasses and take the attributes when they are connected to the superclass."
    }

  ]
